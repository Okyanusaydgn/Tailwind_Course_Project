/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    :before,
    :after,
    ::backdrop {
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-tracking: initial;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
    }
  }
}
@layer theme {
  :root,
  :host {
    --font-sans: "Josefin Sans", sans-serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-6xl: 72rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-bold: 700;
    --tracking-widest: 0.3em;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-alata: "Alata", sans-serif;
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  html,
  :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not ((-webkit-appearance: -apple-pay-button))) or
    (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
  h5 {
    bottom: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 52);
    padding-inline: calc(var(--spacing) * 6);
    --tw-duration: 0.2s;
    transition-duration: 0.2s;
    position: absolute;
  }
  @media (hover: hover) {
    h5:is(:where(.group):hover *) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      color: var(--color-black);
    }
  }
  @media (min-width: 48rem) {
    h5 {
      bottom: calc(var(--spacing) * 8);
      padding-inline: calc(var(--spacing) * 10);
    }
  }
}
@layer components {
  #hero {
    background-image: url(../images/desktop/image-hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
  }
  @media (max-width: 36rem) {
    #hero {
      background-image: url(../images/mobile/image-hero.jpg);
      background-position: 50%;
    }
  }
  .btn {
    margin-block: calc(var(--spacing) * 0);
    border-style: var(--tw-border-style);
    border-width: 2px;
    border-color: var(--color-black);
    padding-inline: calc(var(--spacing) * 10);
    padding-block: calc(var(--spacing) * 2);
    font-family: var(--font-alata);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
    text-transform: uppercase;
  }
  @media (hover: hover) {
    .btn:hover {
      background-color: var(--color-black);
      color: var(--color-white);
    }
  }
  .item-container {
    flex-direction: column;
    justify-content: space-between;
    width: 100%;
    display: flex;
  }
  :where(.item-container > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 6) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  .item-container {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    color: var(--color-white);
    text-transform: uppercase;
  }
  @media (min-width: 48rem) {
    .item-container {
      flex-direction: row;
    }
    :where(.item-container > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      margin-block-start: calc(
        calc(var(--spacing) * 0) * var(--tw-space-y-reverse)
      );
      margin-block-end: calc(
        calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse))
      );
      margin-inline-start: calc(
        calc(var(--spacing) * 8) * var(--tw-space-x-reverse)
      );
      margin-inline-end: calc(
        calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse))
      );
    }
  }
  .item {
    position: relative;
    overflow: hidden;
  }
  @media (min-width: 48rem) {
    .item {
      width: 25%;
    }
  }
  .item-gradient {
    top: calc(var(--spacing) * 0);
    right: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: transparent;
    --tw-gradient-to: var(--color-gray-900);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
    position: absolute;
  }
  @media (hover: hover) {
    .item-gradient:is(:where(.group):hover *) {
      --tw-gradient-from: var(--color-gray-50);
      --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
      );
      --tw-gradient-to: var(--color-white);
      opacity: 0.7;
    }
  }
  .hamburger {
    cursor: pointer;
    width: 24px;
    height: 24px;
    transition: transform 0.3s ease-in-out;
    position: relative;
  }
  .hamburger-top,
  .hamburger-middle,
  .hamburger-bottom {
    background: #fff;
    width: 24px;
    height: 2px;
    transition: transform 0.3s ease-in-out, opacity 0.7s ease-in-out;
    position: absolute;
    top: 0;
    left: 0;
    transform: rotate(0);
  }
  .hamburger-middle {
    opacity: 1;
    transform: translateY(7px);
  }
  .hamburger-bottom {
    transform: translateY(14px);
  }
  .open {
    transform: rotate(90deg);
  }
  .open .hamburger-top {
    transform: rotate(45deg) translateY(6px) translate(6px);
  }
  .open .hamburger-middle {
    display: none;
  }
  .open .hamburger-bottom {
    transform: rotate(-45deg) translateY(6px) translate(-6px);
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-48 {
    top: calc(var(--spacing) * 48);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-40 {
    z-index: 40;
  }
  .container {
    width: 100%;
  }
  @media (min-width: 30rem) {
    .container {
      max-width: 30rem;
    }
  }
  @media (min-width: 48rem) {
    .container {
      max-width: 48rem;
    }
  }
  @media (min-width: 61rem) {
    .container {
      max-width: 61rem;
    }
  }
  @media (min-width: 90rem) {
    .container {
      max-width: 90rem;
    }
  }
  @media (min-width: 96rem) {
    .container {
      max-width: 96rem;
    }
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-32 {
    margin-block: calc(var(--spacing) * 32);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-32 {
    margin-top: calc(var(--spacing) * 32);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }
  .mb-32 {
    margin-bottom: calc(var(--spacing) * 32);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-44 {
    width: calc(var(--spacing) * 44);
  }
  .w-full {
    width: 100%;
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 3) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 4) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 6) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 8) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 4) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  .self-end {
    align-self: flex-end;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .pt-40 {
    padding-top: calc(var(--spacing) * 40);
  }
  .pr-0 {
    padding-right: calc(var(--spacing) * 0);
  }
  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }
  .text-center {
    text-align: center;
  }
  .font-alata {
    font-family: var(--font-alata);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .duration-200 {
    --tw-duration: 0.2s;
    transition-duration: 0.2s;
  }
  @media (hover: hover) {
    .group-hover\:scale-110:is(:where(.group):hover *) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .group-hover\:border-b:is(:where(.group):hover *) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
    .group-hover\:border-blue-50:is(:where(.group):hover *) {
      border-color: var(--color-blue-50);
    }
    .hover\:text-pink-500:hover {
      color: var(--color-pink-500);
    }
  }
  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (min-width: 48rem) {
    .md\:absolute {
      position: absolute;
    }
    .md\:right-0 {
      right: calc(var(--spacing) * 0);
    }
    .md\:m-32 {
      margin: calc(var(--spacing) * 32);
    }
    .md\:mx-0 {
      margin-inline: calc(var(--spacing) * 0);
    }
    .md\:mt-0 {
      margin-top: calc(var(--spacing) * 0);
    }
    .md\:ml-3 {
      margin-left: calc(var(--spacing) * 3);
    }
    .md\:block {
      display: block;
    }
    .md\:flex {
      display: flex;
    }
    .md\:hidden {
      display: none;
    }
    .md\:flex-row {
      flex-direction: row;
    }
    .md\:items-start {
      align-items: flex-start;
    }
    .md\:justify-between {
      justify-content: space-between;
    }
    .md\:justify-end {
      justify-content: flex-end;
    }
    :where(.md\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(
        calc(var(--spacing) * 0) * var(--tw-space-y-reverse)
      );
      margin-block-end: calc(
        calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse))
      );
    }
    :where(.md\:space-y-4 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(
        calc(var(--spacing) * 4) * var(--tw-space-y-reverse)
      );
      margin-block-end: calc(
        calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))
      );
    }
    :where(.md\:space-x-6 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(
        calc(var(--spacing) * 6) * var(--tw-space-x-reverse)
      );
      margin-inline-end: calc(
        calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse))
      );
    }
    :where(.md\:space-x-8 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(
        calc(var(--spacing) * 8) * var(--tw-space-x-reverse)
      );
      margin-inline-end: calc(
        calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse))
      );
    }
    .md\:p-10 {
      padding: calc(var(--spacing) * 10);
    }
    .md\:px-0 {
      padding-inline: calc(var(--spacing) * 0);
    }
    .md\:py-20 {
      padding-block: calc(var(--spacing) * 20);
    }
    .md\:pl-20 {
      padding-left: calc(var(--spacing) * 20);
    }
    .md\:text-left {
      text-align: left;
    }
    .md\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    .md\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
